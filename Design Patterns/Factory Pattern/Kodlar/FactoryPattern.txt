package com.company;

public class Main {

    public static void main(String[] args) {

        CharacterFactory characterFactory = new CharacterFactory();

        Races bothan = characterFactory.getRace("Bothan");
        System.out.println(bothan.getRace());
        Races cerean = characterFactory.getRace("cerean");
        System.out.println(cerean.getRace());
        Races duros = characterFactory.getRace("duros");
        System.out.println(duros.getRace());
        Races insan = characterFactory.getRace("insan");
        System.out.println(insan.getRace());

    }
}

interface Races {

    String getRace();
    String getName();
    String getCharacteristicFeatures();
    String getPersonality();
    String getPhysicalFeatures();
    String getHomeland();
    String getLanguage();
    String getSpecialSkills();
}

class Insan implements Races {
    @Override
    public String getRace() {
        return "Insan";
    }

    @Override
    public String getName() {
        return "Orçun";
    }

    @Override
    public String getCharacteristicFeatures() {
        return "İnsan kişiliği tek yönlü değildir.\n Her zaman değişkenlik gösterebilir. Bunun yanında her duruma kolayca adapte olabilmeleri, inatçı ve tuttuğunu koparan yapıları onları eşsiz kılar.";
    }

    @Override
    public String getPersonality() {
        return "Onlar esnek ve hırslıdırlar. Zevkleri, ahlakları, gelenek ve görenekleri farklı farklıdır.";
    }

    @Override
    public String getPhysicalFeatures() {
        return "İnsanlar ortalama 1,8 metreden uzundurlar.\n Derilerinin rengi siyaha yakın renklerden, solgun, açık renklere, saçlarının renkleri ise siyahtan, sarıya doğru değişir.\nErkekleri, kadınlarına göre daha boylu ve iridir. \nİnsanlar ergenliklerini 15 yaşında tamamlarlar ve nadiren 100 seneden fazla yaşayabilirler.";
    }

    @Override
    public String getHomeland() {
        return "Coruscant, Corulag, Naboo, Tatooine ve Alderean’ı insanların anavatanı olarak sayabiliriz.";
    }

    @Override
    public String getLanguage() {
        return "İnsanlar “Basic” (Temel Dil, galakside yaşayan çoğu ırkın konuşabildiği genel bir dildir.) dilini okuyabilir ve yazabilirler. \nDiğer dilleri de öğrenebilir, en gizli kalmış olanları da buna dahil.";
    }

    @Override
    public String getSpecialSkills() {
        return "İnsanlar çabuk öğrenip, çabuk ustalaşırlar. Birçok şeye yetenekleri vardır.";
    }
}

class Duros implements Races {
    @Override
    public String getRace() {
        return "Duros";
    }

    @Override
    public String getName() {
        return "Baniss Keeg";
    }

    @Override
    public String getCharacteristicFeatures() {
        return "Bir Duros her zaman heyecan ve macera meraklısıdır. Her zaman bir sonraki “hiperuzay” atlayışında ne olacağını merak ederler.";
    }

    @Override
    public String getPersonality() {
        return "Onlar gururlu, kendi yağında kavrulan, sakin ve barışçıl bir ırk olarak bilinirler.";
    }

    @Override
    public String getPhysicalFeatures() {
        return "Duroslar genellikle 1.8 metreden uzundurlar. \nTüysüz vücutları, kocaman gözleri, geniş ve dudaksız bir ağızları vardır.\nDeri renkleri mavi-gri’den, derin gök mavisine kadar gider.";
    }

    @Override
    public String getHomeland() {
        return "Duro sistemindeki tüm gezegenler.";
    }

    @Override
    public String getLanguage() {
        return "Duroslar, Durese ve Basic dillerini okuyup, yazabilirler.";
    }

    @Override
    public String getSpecialSkills() {
        return "Duroslar ilk seviyede Spacer (uzaycı) featini (marifetini) bonus feat (marifet) olarak alır.";
    }
}

class Cerean implements Races {
    @Override
    public String getRace() {
        return "Cerean";
    }

    @Override
    public String getName() {
        return "Ki-Adi";
    }

    @Override
    public String getCharacteristicFeatures() {
        return "Cereanlar her zaman sakin, rasyonel ve mantıklı davranırlar.";
    }

    @Override
    public String getPersonality() {
        return "Cereanlar her zaman sakin, rasyonel ve mantıklı davranırlar.";
    }

    @Override
    public String getPhysicalFeatures() {
        return "Cereanlar uzun kafataslarıyla genellikle 2 metreyi geçerler. \n İnsanlardan çok daha uzun zamanda ergen olur, çok daha uzun yaşarlar.";
    }

    @Override
    public String getHomeland() {
        return "Mutlu gezegen Cerea.";
    }

    @Override
    public String getLanguage() {
        return "Cereanlar, Cerean ve Basic dillerini okuyup, yazabilirler.";
    }

    @Override
    public String getSpecialSkills() {
        return "Cereanlar zeki ve sezgileri kuvvetli bir ırktır. \nFakat diğer ırklara göre hantaldırlar.";
    }
}

class Bothan implements Races {
    @Override
    public String getRace() {
        return "Bothan";
    }

    @Override
    public String getName() {
        return "Borsk Fey’lya";
    }

    @Override
    public String getCharacteristicFeatures() {
        return "Bothanlar doğaları gereği çıkarcı, kurnaz, şüpheci ve meraklı, biraz da paranoyaktırlar.";
    }

    @Override
    public String getPersonality() {
        return "Sinir bozucu olsalar da çoğu vefalı ve cesurdur.";
    }

    @Override
    public String getPhysicalFeatures() {
        return "Bothanlar, dalga dalga bir kürkle kaplıdır.\n Sivri uçlu, konik burunları ve hem kadınlarında, hem de erkeklerinde bulunan sakalları vardır.\n Boyları genellikle 1.6 metreden uzundur.\n İnsanlardan çok daha uzun zamanda ergen olur, çok daha uzun yaşarlar.";
    }

    @Override
    public String getHomeland() {
        return "Endüstri dünyası Bothawui ve onun orta halkadaki kolonileri, Kothlis ve Torolis gibi…";
    }

    @Override
    public String getLanguage() {
        return "Bothanlar, Bothese ve Basic dillerini okuyup, yazabilirler.";
    }

    @Override
    public String getSpecialSkills() {
        return "Bothanlar istihbaratçılığa doğuştan yeteneklidirler.";
    }
}

class CharacterFactory {

    public Races getRace(String race){

        if(race == null){
            return null;
        }
        if(race.equalsIgnoreCase("Bothan")){
            return new Bothan();

        } else if(race.equalsIgnoreCase("Cerean")){
            return new Cerean();

        } else if(race.equalsIgnoreCase("Duros")){
            return new Duros();

        } else if(race.equalsIgnoreCase("insan")){
            return new Insan();

        }

        return null;
    }
}



